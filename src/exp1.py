import serial
ser = serial.Serial('COM7')

# Generated by usbrply
# cmd: .\env\Scripts\usbrply .\usbcap\exp2_loc.pcapng

def replay():
    # Generated by usbrply
    # Source: Windows pcap (USBPcap)
    # cmd: .\env\Scripts\usbrply .\usbcap\exp2_loc.pcapng
    # PCapGen device hi: selected device 5 
    # Generated from packet 25/26
    # bulkWrite(0x02, b"\x20\x00\x0B\x00\x3F\x01\xFB\x0E\x49\x0E\x7A")
    return
    # WARNING: Packet 27 missing submit.  URB ID: 0xFFFFC70D179D2A20
    # Generated from packet 29/30
    bulkWrite(0x02, b"\x21\x00\x04\x00")
    # WARNING: Packet 31 missing submit.  URB ID: 0xFFFFC70CFE288A20
    # Generated from packet 33/34
    bulkWrite(0x02, b"\x20\x00\x0B\x00\x3F\x01\xFB\x03\x7E\x04\xCB")
    # WARNING: Packet 35 missing submit.  URB ID: 0xFFFFC70D18931A20
    # Generated from packet 37/38
    bulkWrite(0x02, b"\x21\x00\x04\x00")
    # WARNING: Packet 39 missing submit.  URB ID: 0xFFFFC70D081F1A20
    # Generated from packet 77/78
    bulkWrite(0x02, b"\x20\x00\x0B\x00\x3F\x01\xFB\x03\x7E\x04\xCB")
    # WARNING: Packet 79 missing submit.  URB ID: 0xFFFFC70D0B857A20
    # Generated from packet 81/82
    bulkWrite(0x02, b"\x21\x00\x04\x00")
    # WARNING: Packet 83 missing submit.  URB ID: 0xFFFFC70D180E8A20
    # Generated from packet 85/86
    bulkWrite(0x02, b"\x20\x00\x0B\x00\x3F\x01\xFB\x01\x5F\x02\xC5")
    # WARNING: Packet 87 missing submit.  URB ID: 0xFFFFC70D0CF26010
    # Generated from packet 89/90
    # WARNING: Packet 91 missing submit.  URB ID: 0xFFFFC70D14A59A20
    # WARNING: 8 pending complete requests
    # PcapGen: generated 93 packets
    # PcapGen device filter: dropped 54 / 93 packets
    # SetupFilter: dropped 3 / 26 entries
def start_preview():
    ser.write(b"\x20\x00\x0B\x00\x3F\x01\xFB\x03\x7E\x04\xCB")
    print('previewing started!')

def stop_preview():
    # bulkWrite(0x02, b"\x21\x00\x04\x00")
    ser.write(b"\x21\x00\x04\x00")
    print('previewing stopped!')

def test():
    # this will let the laser the next 
    # ser.write(b"\x20\x00\x0B\x00\x3F\x01\xFB\x03\x7E\x04\xCB")
    ser.write(b"\x20\x00\x04\x00")

if __name__ == '__main__':
    # replay()
    # start_preview()
    # stop_preview()
    test()